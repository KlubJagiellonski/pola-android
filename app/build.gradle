import java.util.logging.Level
import java.util.logging.Logger

buildscript {
    repositories {
        maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "pl.pola_app"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 27
        versionName "1.7"
    }

    signingConfigs {
        release {
            File keystore = file("../keystore.properties")
            if (keystore.exists()) {
                def Properties keyProps = new Properties()
                keyProps.load(new FileInputStream(keystore))
                storeFile file(keyProps["store"])
                keyAlias keyProps["alias"]
                storePassword keyProps["storePass"]
                keyPassword keyProps["pass"]
            } else {
                Logger.getLogger("pl.pola_app").log(Level.WARNING, "SIGNING: 'keystore.properties' file does not exist!")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "USE_FIREBASE", "true"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "USE_FIREBASE", "true"
        }
        dev {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "USE_FIREBASE", "false"
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def build_param = "${build}";

if (build_param != "dev") {
    //exclude dev builkd
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('dev')) {
            variant.setIgnore(true);
        }
    }
} else {
    //exclude all except dev
    android.variantFilter { variant ->
        if (!variant.buildType.name.equals('dev')) {
            variant.setIgnore(true);
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.github.jkwiecien:EasyImage:1.3.1'
    implementation 'com.facebook.device.yearclass:yearclass:2.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.google.dagger:dagger:2.16'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'org.parceler:parceler-api:1.1.11'
    implementation 'com.github.tajchert:nammu:1.2.1'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    annotationProcessor 'org.parceler:parceler:1.1.11'
    compileOnly 'javax.annotation:jsr250-api:1.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.+'
    testImplementation 'org.robolectric:robolectric:4.1'
}

apply plugin: 'com.google.gms.google-services'